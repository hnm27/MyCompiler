int i =0;
int a[5] = {100,250,30,47,55};
while(i<5){
print(a%i);
i = i +1;
}

int j=0;
int arr[2][3] = { {1,2,3} , {4,5,7}};
while(j<2){
print(arr%j%0);
j=j+1;
}

import Sprockell
prog :: [Instruction]
prog = [Load  (ImmValue 0) regA,Push  regA,Pop  regA,Store  regA (DirAddr 1),Load  (ImmValue 100) regA,Push  regA,Pop  regA,Store  regA (DirAddr 2),Load  (ImmValue 250) regA,Push  regA,Pop  regA,Store  regA (DirAddr 3),Load  (ImmValue 30) regA,Push  regA,Pop  regA,Store  regA (DirAddr 4),Load  (ImmValue 47) regA,Push  regA,Pop  regA,Store  regA (DirAddr 5),Load  (ImmValue 55) regA,Push  regA,Pop  regA,Store  regA (DirAddr 6),Load  (DirAddr 1) regA,Push  regA,Load  (ImmValue 5) regA,Push  regA,Pop  regB,Pop  regA,Compute  Lt regA regB regA,Push  regA,Pop  regA,Branch  regA (Rel (2)),Jump  (Rel (20)),Load  (ImmValue 1) regB,Load  (IndAddr regB) regB,Load  (ImmValue 2) regC,Compute  Add regB regC regB,Load  (IndAddr regB) regA,Push  regA,Pop  regA,WriteInstr  regA numberIO,Load  (DirAddr 1) regA,Push  regA,Load  (ImmValue 1) regA,Push  regA,Pop  regB,Pop  regA,Compute  Add regA regB regA,Push  regA,Pop  regA,Store  regA (DirAddr 1),Jump  (Rel (-29)),Load  (ImmValue 0) regA,Push  regA,Pop  regA,Store  regA (DirAddr 7),Load  (ImmValue 1) regA,Push  regA,Pop  regA,Store  regA (DirAddr 8),Load  (ImmValue 2) regA,Push  regA,Pop  regA,Store  regA (DirAddr 9),Load  (ImmValue 3) regA,Push  regA,Pop  regA,Store  regA (DirAddr 10),Load  (ImmValue 4) regA,Push  regA,Pop  regA,Store  regA (DirAddr 11),Load  (ImmValue 5) regA,Push  regA,Pop  regA,Store  regA (DirAddr 12),Load  (ImmValue 7) regA,Push  regA,Pop  regA,Store  regA (DirAddr 13),Load  (DirAddr 7) regA,Push  regA,Load  (ImmValue 2) regA,Push  regA,Pop  regB,Pop  regA,Compute  Lt regA regB regA,Push  regA,Pop  regA,Branch  regA (Rel (2)),Jump  (Rel (24)),Load  (ImmValue 7) regB,Load  (IndAddr regB) regB,Load  (ImmValue 3) regC,Compute  Mul regB regC regB,Load  (ImmValue 8) regC,Compute  Add regB regC regB,Load  (ImmValue 0) regC,Compute  Add regB regC regB,Load  (IndAddr regB) regA,Push  regA,Pop  regA,WriteInstr  regA numberIO,Load  (DirAddr 7) regA,Push  regA,Load  (ImmValue 1) regA,Push  regA,Pop  regB,Pop  regA,Compute  Add regA regB regA,Push  regA,Pop  regA,Store  regA (DirAddr 7),Jump  (Rel (-33)),EndProg]

main = run[prog]

[Sprockell 0 says 100, Sprockell 0 says 250, Sprockell 0 says 30, Sprockell 0 says 47, Sprockell 0 says 55, Sprockell 0 says 1, Sprockell 0 says 4]